# На вход программе подается число nn. Напишите программу,
# которая создает и выводит построчно список,
# состоящий из nn списков [[1, 2, ..., n], [1, 2, ..., n], ..., [1, 2, ..., n]].

# n = int(input())    # считываем значения n
#
# for i in range(n):
#     my_list = []
#     for j in range(1, n+1):
#         my_list.append(j)
#     print(my_list)
# print()


# На вход программе подается число nn. Напишите программу,
# которая создает и выводит построчно вложенный список,
# состоящий из nn списков [[1], [1, 2], [1, 2, 3], ..., [1, 2, ..., n]].

# n = int(input())    # считываем значения n
# my_list = [list(range(1, i+1)) for i in range(1, n + 1)]
# for row in my_list:
#     print(row)


# Треугольник Паскаля — бесконечная таблица биномиальных коэффициентов, имеющая треугольную форму.
# В этом треугольнике на вершине и по бокам стоят единицы.
# Каждое число равно сумме двух расположенных над ним чисел.

# # 1 решение
# n = int(input())
# lst = [[1]]
# for i in range(1, n + 1):
#     row = [1] * (i + 1)
#     for j in range(i + 1):
#         if j != 0 and j != i:
#             row[j] = lst[i - 1][j - 1] + lst[i - 1][j]
#     lst.append(row)
#
# print(lst[-1])
#
# # 2 решение
# from math import factorial
# n = int(input())
# b = []
# for i in range(n+1):
#     b.append(int((factorial(n))/(factorial(i)*factorial(n-i))))
# print(b)


# На вход программе подается натуральное число n.
# Напишите программу, которая выводит первые nn строк треугольника Паскаля.

# from math import factorial
# n = int(input())
# for i in range(0, n):
#     b = []
#     for j in range(0, n):
#         if i < j:
#             break
#         else:
#             b.append(int((factorial(i))/(factorial(j)*factorial(i-j))))
#     print(*b)



# На вход программе подается строка текста, содержащая символы. Напишите программу,
# которая упаковывает последовательности одинаковых символов заданной строки в подсписки.

# s = input().split()
# res = [[s[0]]]
# for i in range(1, len(s)):
#     if s[i] == s[i - 1]:
#         res[-1].append(s[i])
#     else:
#         res.append([s[i]])
# print(res)


# На вход программе подаются две строки, на одной символы, на другой число n.
# Из первой строки формируется список.
#
# Реализуйте функцию chunked(), которая принимает на вход список и число,
# задающее размер чанка (куска),
# а возвращает список из чанков указанной длины.

# list1 = []
# l = input().split()
# n = int(input())
#
# for i in range(0, len(l), n):
#     list1.append(l[i:i+n])
# print(list1)


# Подсписок — часть другого списка.
# Подсписок может содержать один элемент, несколько, и даже ни одного.
# Например, [1], [2], [3] и [4] — подсписки списка [1, 2, 3, 4].
# Список [2, 3] — подсписок списка [1, 2, 3, 4],
# но список [2, 4] не подсписок списка [1, 2, 3, 4], так как элементы 2 и 4 во втором списке не смежные.
# Пустой список — подсписок любого списка. Сам список — подсписок самого себя,
# то есть список [1, 2, 3, 4] подсписок списка [1, 2, 3, 4].
#
# На вход программе подается строка текста, содержащая символы.
# Из данной строки формируется список. Напишите программу,
# которая выводит список, содержащий все возможные подсписки списка, включая пустой список.

n = input().split()

fin, tot = [],[]
for i in range(0, len(n)):
    for j in range(0, len(n)):
        fin = n[j:i + j +1]
        if len(fin) == i + 1:
            tot.append(fin)
print([[]]+tot[::1])