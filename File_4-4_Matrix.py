# На вход программе подаются два натуральных числа n и m,
# каждое на отдельной строке — количество строк и столбцов в матрице.
# Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке;
# подряд идут элементы сначала первой строки, затем второй, и т.д.
#
# Напишите программу, которая сначала считывает элементы матрицы один за другим,
# затем выводит их в виде матрицы.

# # 1 решение
#
# a = []
# n = int(input())    #stroka
# m = int(input())    #stolbec
#
# for i in range(n):
#     matrix = []
#     for i in range(m):
#         matrix.append(input())
#     a.append(matrix)
# for i in a:                         # вывод строк/столцов
#     print(*i)
#
# # 2 решение
# n = int(input())
# m = int(input())
#
# [print(*[input() for i in range(m)]) for i in range(n)]


# На вход программе подаются два натуральных числа n и m,
# каждое на отдельной строке — количество строк и столбцов в матрице.
# Далее вводятся сами элементы матрицы — слова, каждое на отдельной строке;
# подряд идут элементы сначала первой строки, затем второй, и т.д.
#
# Напишите программу, которая считывает элементы матрицы один за другим,
# выводит их в виде матрицы, выводит пустую строку, и снова ту же матрицу,
# но уже поменяв местами строки со столбцами:
# первая строка выводится как первый столбец, и так далее.

# 1 решение
a = []
n = int(input())    #stroka
m = int(input())    #stolbec

for i in range(n):
    matrix = []
    for i in range(m):
        matrix.append(input())
    a.append(matrix)
for i in a:
    print(*i)

print()

for c in range(m):                   # вывод столцов/строк
    for r in range(n):
        print(a[r][c], end=' ')
    print()


# 1 решение
n, m = int(input()), int(input())
w = [[input() for _ in range(m)] for _ in range(n)]
[print(*r) for r in w]
print()
[print(*[w[j][i] for j in range(n)]) for i in range(m)]

